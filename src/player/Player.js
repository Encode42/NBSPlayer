import{playNote}from"../audio/audio.js";import{EventClass}from"../util/EventClass.js";const progressBar=document.getElementById("progress-bar"),loopingCheck=document.getElementById("looping-check");let lastProgress=0;const loadedPlayers=new Map;class Player extends EventClass{timePerTick;hasSolo;layers={};audibleLayers=0;stop=!1;currentJob;currentTick=-1;lastTick;updateProgress=!0;hasEndListener=!1;loop;maxLoopCount;currentLoopCount=0;loopStartTick;useParity=!0;constructor(s){super();const t=loadedPlayers.get(s.name||s.size);if(t)return t.checkProgressBar(),t;this.hasSolo=s.hasSolo,this.timePerTick=s.timePerTick,this.lastTick=s.size,this.loop=s.loopEnabled,this.maxLoopCount=s.maxLoopCount,this.loopStartTick=s.loopStartTick,this.checkLooping();var e=s.layers.length;for(let t=0;t<e;t++){var o=s.layers[t];this.hasSolo&&!o.solo||o.locked||(this.layers[this.audibleLayers]=o,this.audibleLayers++)}loadedPlayers.set(s.name||s.size,this)}checkLooping(){loopingCheck.checked=this.loop,loopingCheck.disabled=!this.loop}checkProgressBar(){var t;!this.updateProgress||(t=Math.round(this.currentTick/this.lastTick*100*10)/10)!==lastProgress&&(lastProgress=t,progressBar.value=t)}async play(){for(this.stop=!1;!this.stop;)this.currentJob=this.runJob(),await this.currentJob}async runJob(){for(let t=0;t<this.audibleLayers;t++){var e=this.layers[t],o=e.notes[this.currentTick];if(o){let t=(o.panning+e.panning)/2,s=o.pitch;this.useParity&&(t=0===e.panning?o.panning:t,s=o.pitch-2),playNote(o.key,o.instrument,o.velocity*e.velocity/100,t,s)}}await new Promise(t=>setTimeout(t,this.timePerTick)),this.currentTick++,this.checkProgressBar(),this.currentTick>this.lastTick&&(this.loop&&(0===this.maxLoopCount||this.maxLoopCount>this.currentLoopCount)?(this.currentLoopCount++,this.currentTick=this.loopStartTick,this.emit("loop")):(this.reset(),this.emit("end")))}async pause(){this.stop=!0,await this.currentJob}async reset(){await this.pause(),this.currentTick=-1,this.currentLoopCount=0,progressBar.value=0}static async stopAll(){for(const t of loadedPlayers.values())await t.pause();progressBar.value=0}}export{Player};